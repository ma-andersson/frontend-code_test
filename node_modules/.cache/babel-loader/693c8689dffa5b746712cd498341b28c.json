{"ast":null,"code":"import _classCallCheck from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/madeleine/Downloads/frontend-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/madeleine/Downloads/frontend-master/src/components/list.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Container, Table } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      list: []\n    };\n    _this.sortList = _this.sortList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.compareByColumn = _this.compareByColumn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.filterList = _this.filterList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Fetch the list on first mount\n\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    } // Retrieve the list of restaurants from the API\n\n  }, {\n    key: \"getList\",\n    value: function getList() {\n      var _this2 = this;\n\n      fetch('/api/list').then(function (res) {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw new Error('Can not retrieve information');\n        }\n      }).then(function (data) {\n        _this2.setState({\n          list: data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } // Sort list in ascending order, depending on which column selected.\n\n  }, {\n    key: \"sortList\",\n    value: function sortList(column) {\n      var list = this.state.list;\n      list.sort(this.compareByColumn(column));\n      this.setState({\n        list: list\n      });\n    } //Compare values in list.\n\n  }, {\n    key: \"compareByColumn\",\n    value: function compareByColumn(column) {\n      return function (a, b) {\n        if (a[column] < b[column]) return -1;\n        if (a[column] > b[column]) return 1;\n        return 0;\n      };\n    } //Filter list on input from search bar.\n\n  }, {\n    key: \"filterList\",\n    value: function filterList() {\n      var searchBar = document.getElementById(\"searchInput\");\n      var inputValue = searchBar.value.toUpperCase();\n      var table = document.getElementById(\"restaurantTable\");\n      var row = table.getElementsByTagName(\"tr\");\n      var columnValue;\n\n      for (var i = 0; i < row.length; i++) {\n        columnValue = row[i].getElementsByTagName(\"td\")[0];\n\n        if (columnValue) {\n          if (columnValue.innerHTML.toUpperCase().indexOf(inputValue) > -1) {\n            row[i].style.display = \"\";\n          } else {\n            row[i].style.display = \"none\";\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"List of all restaurants\"))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"rowLayout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchInput\",\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        placeholder: \"Search restaurant\",\n        onChange: this.filterList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(Table, {\n        hover: true,\n        id: \"restaurantTable\",\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"columnPointer\",\n        onClick: function onClick() {\n          return _this3.sortList('name');\n        },\n        width: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Name \", React.createElement(\"arrow\", {\n        className: \"down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        className: \"columnPointer\",\n        onClick: function onClick() {\n          return _this3.sortList('rating');\n        },\n        width: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Rating \", React.createElement(\"arrow\", {\n        className: \"down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, list.length > 0 ? list.map(function (restaurant) {\n        return React.createElement(\"tr\", {\n          key: restaurant.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, restaurant.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, restaurant.rating), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/restaurant/\".concat(restaurant.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Select\"))));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Loading...\"))))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/madeleine/Downloads/frontend-master/src/components/list.js"],"names":["React","Component","Button","Container","Table","Link","List","props","state","list","sortList","bind","compareByColumn","filterList","getList","fetch","then","res","ok","json","Error","data","setState","catch","error","console","log","column","sort","a","b","searchBar","document","getElementById","inputValue","value","toUpperCase","table","row","getElementsByTagName","columnValue","i","length","innerHTML","indexOf","style","display","map","restaurant","id","name","rating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, Container,Table} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nclass List extends Component {\n    // Initialize the state\n    constructor(props){\n        super(props);\n\n        this.state = {\n            list: []\n        }\n        this.sortList = this.sortList.bind(this);\n        this.compareByColumn = this.compareByColumn.bind(this);\n        this.filterList = this.filterList.bind(this);\n    }\n\n    // Fetch the list on first mount\n    componentDidMount() {\n        this.getList();\n    }\n\n    // Retrieve the list of restaurants from the API\n    getList () {\n        fetch('/api/list')\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    throw new Error ('Can not retrieve information');\n                }})\n            .then(data => {\n                this.setState({list: data})\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n    }\n\n    // Sort list in ascending order, depending on which column selected.\n    sortList (column){\n        const list = this.state.list;\n        list.sort(this.compareByColumn(column));\n        this.setState({list})\n    }\n\n    //Compare values in list.\n    compareByColumn (column){\n        return function (a,b){\n            if (a[column] < b[column]) return -1;\n            if (a[column] > b[column]) return 1;\n            return 0;\n        }\n    }\n\n    //Filter list on input from search bar.\n    filterList () {\n        var searchBar = document.getElementById(\"searchInput\");\n        var inputValue =searchBar.value.toUpperCase();\n        var table = document.getElementById(\"restaurantTable\");\n        var row = table.getElementsByTagName(\"tr\");\n        var columnValue;\n\n        for ( var i = 0; i < row.length; i++) {\n            columnValue = row[i].getElementsByTagName(\"td\")[0];\n            if (columnValue) {\n                if (columnValue.innerHTML.toUpperCase().indexOf(inputValue) > -1) {\n                    row[i].style.display = \"\";\n                } else {\n                    row[i].style.display = \"none\";\n                }\n            }\n        }\n    }\n\n    render() {\n        const list = this.state.list;\n\n        return (\n            <div className=\"App\">\n                <nav className=\"navbar navbar-dark bg-dark\">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <h2>List of all restaurants</h2>\n                    </a>\n                </nav>\n                <Container>\n                    <form>\n                        <fieldset className=\"rowLayout\">\n                            <input id=\"searchInput\" type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Search restaurant\" onChange={this.filterList}/>\n                        </fieldset>\n                    </form>\n                <Table hover id=\"restaurantTable\" className=\"table\">\n                    <thead>\n                    <tr>\n                        <th className=\"columnPointer\" onClick={() => this.sortList('name')} width=\"400\">Name <arrow className=\"down\"></arrow></th>\n                        <th className=\"columnPointer\" onClick={() => this.sortList('rating')} width=\"400\">Rating <arrow className=\"down\"></arrow></th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {(list.length > 0) ? list.map(function(restaurant) {\n                        return (\n                            <tr key = {restaurant.id}>\n                                <td>\n                                    {restaurant.name}\n                                </td>\n                                <td>\n                                    {restaurant.rating}\n                                </td>\n                                <td>\n                                    <Link to={`/restaurant/${restaurant.id}`}>\n                                        <Button\n                                            variant='primary'>\n                                            Select\n                                        </Button>\n                                    </Link>\n                                </td>\n                            </tr>\n                        )\n                    }) : <tr><td colSpan=\"5\">Loading...</td></tr> }\n                    </tbody>\n                </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default List;\n\n"]},"metadata":{},"sourceType":"module"}